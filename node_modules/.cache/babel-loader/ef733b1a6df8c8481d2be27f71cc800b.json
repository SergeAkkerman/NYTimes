{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergey/Desktop/LinkUp_React_Final/my-app/src/Dropdown.js\";\nimport React, { useState, Component } from 'react';\nimport fire from './config/Fire';\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\nimport './App.css';\n\nclass Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.pathToAvatar = this.pathToAvatar.bind(this);\n    this.state = {\n      avatar_link: this.databaseAvatarLink\n    };\n    this.logout = this.logout.bind(this);\n    this.Navbar = this.Navbar.bind(this);\n  } //fetching avatar data from firebase\n\n\n  pathToAvatar() {\n    const userId = fire.auth().currentUser.uid;\n    fire.database().ref('/users/' + userId).once('value').then(snapshot => {\n      const defaultAvatar = 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png';\n      const databaseAvatarLink = snapshot.val() && snapshot.val().avatar_link;\n      databaseAvatarLink ? this.setState({\n        avatar_link: databaseAvatarLink.toString()\n      }) : this.setState({\n        avatar_link: defaultAvatar\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.pathToAvatar();\n  }\n\n  logout() {\n    fire.auth().signOut();\n  }\n\n  App(props) {\n    return /*#__PURE__*/_jsxDEV(Navbar, {\n      children: /*#__PURE__*/_jsxDEV(NavItem, {\n        icon: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"Avatar\",\n          src: props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 18\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Login\",\n          onClick: this.logout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/profile\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Login\",\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }, this);\n  }\n\n  Navbar(props) {\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-nav\",\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this);\n  }\n\n  NavItem(props) {\n    const [open, setOpen] = useState(false);\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"icon-button\",\n      onClick: () => setOpen(!open),\n      children: [props.icon, open && props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AvatarDiv\",\n      children: App(this.state.avatar_link)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Dropdown;","map":{"version":3,"sources":["/Users/sergey/Desktop/LinkUp_React_Final/my-app/src/Dropdown.js"],"names":["React","useState","Component","fire","BrowserRouter","Route","NavLink","Dropdown","constructor","props","pathToAvatar","bind","state","avatar_link","databaseAvatarLink","logout","Navbar","userId","auth","currentUser","uid","database","ref","once","then","snapshot","defaultAvatar","val","setState","toString","componentDidMount","signOut","App","children","NavItem","open","setOpen","icon","render"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\nimport fire from './config/Fire';\nimport {BrowserRouter, Route, NavLink} from 'react-router-dom';\nimport './App.css';\n\nclass Dropdown extends React.Component {\n\nconstructor(props) {\n  super(props);\n  this.pathToAvatar = this.pathToAvatar.bind(this);\n  this.state = {\n  avatar_link: this.databaseAvatarLink,\n  }; \n  this.logout = this.logout.bind(this);\n  this.Navbar = this.Navbar.bind(this);\n}\n\n\n\n//fetching avatar data from firebase\npathToAvatar(){\nconst userId = fire.auth().currentUser.uid;\nfire.database().ref('/users/' + userId).once('value').then((snapshot) => {\nconst defaultAvatar = 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png'\nconst databaseAvatarLink = (snapshot.val() && snapshot.val().avatar_link); \ndatabaseAvatarLink ? (this.setState({avatar_link: databaseAvatarLink.toString()})) : (this.setState({avatar_link: defaultAvatar}));\n});\n}\n\ncomponentDidMount(){\n  this.pathToAvatar();\n}\n\nlogout() {\n  fire.auth().signOut();\n}\n\nApp(props){ \nreturn (\n  <Navbar>\n  <NavItem icon= <img className='Avatar' src= {props} />>\n  <div className='Login' onClick = {this.logout}>Logout</div>\n  <NavLink to='/profile'><div className='Login'>Profile</div></NavLink>\n  </NavItem>\n  </Navbar>\n  );\n}\n\nNavbar(props){\nreturn(\n  <nav className=\"navbar\">\n  <div className=\"navbar-nav\">{ props.children }</div>\n  </nav>\n  )\n }\n\nNavItem(props){\nconst [open, setOpen] = useState(false);\nreturn(\n\n  <a className=\"icon-button\" onClick = {()=> setOpen(!open)}>\n  {props.icon}\n  \n  {open && props.children}\n  </a>\n  )\n}\n\nrender() {\n    return (\n    <div className='AvatarDiv'>\n    {App(this.state.avatar_link)}   \n    </div>\n    )\n  }\n}\n\n\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}