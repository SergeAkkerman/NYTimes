{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergey/Desktop/LinkUp_React_Final/my-app/src/Dropdown.js\";\nimport React, { useState, Component } from 'react';\nimport fire from './config/Fire';\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\nimport './App.css';\n\nclass Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.pathToAvatar = this.pathToAvatar.bind(this);\n    this.state = {\n      avatar_link: this.databaseAvatarLink\n    };\n  } //fetching avatar data from firebase\n\n\n  pathToAvatar() {\n    const userId = fire.auth().currentUser.uid;\n    fire.database().ref('/users/' + userId).once('value').then(snapshot => {\n      const defaultAvatar = 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png';\n      const databaseAvatarLink = snapshot.val() && snapshot.val().avatar_link;\n      databaseAvatarLink ? this.setState({\n        avatar_link: databaseAvatarLink.toString()\n      }) : this.setState({\n        avatar_link: defaultAvatar\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.pathToAvatar();\n  }\n\n  render() {\n    var _s = $RefreshSig$();\n\n    function logout() {\n      fire.auth().signOut();\n    }\n\n    function Navbar(props) {\n      return /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-nav\",\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this);\n    }\n\n    function App(props) {\n      return /*#__PURE__*/_jsxDEV(Navbar, {\n        children: /*#__PURE__*/_jsxDEV(NavItem, {\n          icon: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"Avatar\",\n            src: props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 22\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Login\",\n            onClick: logout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/profile\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Login\",\n              children: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this);\n    }\n\n    function NavItem(props) {\n      _s();\n\n      const [open, setOpen] = useState(false);\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"icon-button\",\n        onClick: () => setOpen(!open),\n        children: [props.icon, open && props.children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this);\n    }\n\n    _s(NavItem, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AvatarDiv\",\n      children: App(this.state.avatar_link)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Dropdown;","map":{"version":3,"sources":["/Users/sergey/Desktop/LinkUp_React_Final/my-app/src/Dropdown.js"],"names":["React","useState","Component","fire","BrowserRouter","Route","NavLink","Dropdown","constructor","props","pathToAvatar","bind","state","avatar_link","databaseAvatarLink","userId","auth","currentUser","uid","database","ref","once","then","snapshot","defaultAvatar","val","setState","toString","componentDidMount","render","logout","signOut","Navbar","children","App","NavItem","open","setOpen","icon"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\nimport fire from './config/Fire';\nimport {BrowserRouter, Route, NavLink} from 'react-router-dom';\nimport './App.css';\n\nclass Dropdown extends React.Component {\n\nconstructor(props) {\n  super(props);\n  this.pathToAvatar = this.pathToAvatar.bind(this);\n  this.state = {\n  avatar_link: this.databaseAvatarLink,\n  }; \n}\n\n\n\n//fetching avatar data from firebase\npathToAvatar(){\n  const userId = fire.auth().currentUser.uid;\n  fire.database().ref('/users/' + userId).once('value').then((snapshot) => {\n    const defaultAvatar = 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png'\n    const databaseAvatarLink = (snapshot.val() && snapshot.val().avatar_link); \ndatabaseAvatarLink ? (this.setState({avatar_link: databaseAvatarLink.toString()})) : (this.setState({avatar_link: defaultAvatar}));\n  });\n}\n\ncomponentDidMount(){\n  this.pathToAvatar();\n}\n\nrender() {\n\n  function   logout() {\n    fire.auth().signOut();\n  }\n\n  function Navbar(props){\n    return(\n      <nav className=\"navbar\">\n      <div className=\"navbar-nav\">{ props.children }</div>\n      </nav>\n      )\n  }\n\n  function App(props){ \n    return (\n      <Navbar>\n      <NavItem icon= <img className='Avatar' src= {props} />>\n      <div className='Login' onClick = {logout}>Logout</div>\n      <NavLink to='/profile'><div className='Login'>Profile</div></NavLink>\n      </NavItem>\n      </Navbar>\n      );\n  }\n\n  function NavItem(props){\n    const [open, setOpen] = useState(false);\n    return(\n\n      <a className=\"icon-button\" onClick = {()=> setOpen(!open)}>\n      {props.icon}\n      \n      {open && props.children}\n      </a>\n      )\n    }\n\n    return (\n    <div className='AvatarDiv'>\n    {App(this.state.avatar_link)}   \n    </div>\n    )\n  }\n}\n\n\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}