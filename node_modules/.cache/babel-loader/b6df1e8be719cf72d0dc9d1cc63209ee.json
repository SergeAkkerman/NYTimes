{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergey/Desktop/LinkUp_React_Final/my-app/src/Articles.js\";\nimport React from 'react';\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: 'https://api.nytimes.com/svc/mostpopular/v2/viewed/1.json?api-key=mN6Xg33Uh049lVc0uwErmOgdhb4TYBt4'\n});\n\nclass Articles extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: []\n    };\n    api.get().then(res => {\n      //console.log(res.data);\n      this.setState({\n        articles: res.data.results\n      }); //console.log(res.data.results);\n\n      this.getArticle = this.getArticle.bind(this);\n    });\n  }\n\n  getArticle() {\n    // Get article titles\n    const list = document.getElementById('list');\n\n    if (list) {\n      const mediaArr = this.state.articles.slice(1, 4).map(media => {\n        const a = \"<p>\" + media.title + \"</p>\";\n        list.insertAdjacentHTML('afterBegin', a);\n      });\n    } else {\n      console.log(\"Error!!!\");\n    }\n  }\n\n  componentDidMount() {\n    this.getArticle();\n  } //const cleared = mediaArr.filter(function(x) { return x !== undefined && x!== null;});\n  // Get article urls\n  //    const getMetadataArr = cleared.map(function (metadataArr) { return metadataArr['media-metadata'][0]['url']; });\n  // if (getMetadataArr.constructor == Array) {console.log(\"Array!\")} else {console.log(\"Error\")};\n  // return getMetadataArr[7];\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Articles\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Breaking news\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"list\",\n        children: [\"TEST\", this.getArticle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\nexport default Articles; //{this.state.articles.map(function (article) {const a = article.title; return <h2>{a}</h2>})}\n//if (article.length != null) {return article.media;}\n// {this.state.tests.map(article => <h2>{article.title}</h2>)}\n// {this.state.articles.map((article) => <h2>{article.title}</h2>)}","map":{"version":3,"sources":["/Users/sergey/Desktop/LinkUp_React_Final/my-app/src/Articles.js"],"names":["React","axios","api","create","baseURL","Articles","Component","constructor","props","state","articles","get","then","res","setState","data","results","getArticle","bind","list","document","getElementById","mediaArr","slice","map","media","a","title","insertAdjacentHTML","console","log","componentDidMount","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAE;AADe,CAAb,CAAZ;;AAKA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAMvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AADiB,SAJlBC,KAIkB,GAJV;AACPC,MAAAA,QAAQ,EAAE;AADH,KAIU;AAEhBR,IAAAA,GAAG,CAACS,GAAJ,GAAUC,IAAV,CAAeC,GAAG,IAAI;AACtB;AACA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAEG,GAAG,CAACE,IAAJ,CAASC;AAArB,OAAd,EAFsB,CAGtB;;AACA,WAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,KALA;AAMD;;AAGDD,EAAAA,UAAU,GAAE;AACR;AACA,UAAME,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;;AACA,QAAIF,IAAJ,EACJ;AAAE,YAAMG,QAAQ,GAAG,KAAKb,KAAL,CAAWC,QAAX,CAAoBa,KAApB,CAA0B,CAA1B,EAA4B,CAA5B,EAA+BC,GAA/B,CAAmCC,KAAK,IAAI;AAC3D,cAAMC,CAAC,GAAI,QAAQD,KAAK,CAACE,KAAd,GAAsB,MAAjC;AAEAR,QAAAA,IAAI,CAACS,kBAAL,CAAwB,YAAxB,EAAsCF,CAAtC;AACF,OAJiB,CAAjB;AAIG,KALD,MAMI;AACHG,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA;AACJ;;AACDC,EAAAA,iBAAiB,GAAE;AACnB,SAAKd,UAAL;AACC,GAhCsC,CAuCnC;AAGJ;AACC;AACA;AACA;;;AAEAe,EAAAA,MAAM,GAAG;AAEN,wBACJ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA,2BAAoB,KAAKf,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI;AAOH;;AAxDsC;;AA4DvC,eAAeZ,QAAf,C,CAGA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\n\nconst api = axios.create({\n\tbaseURL: 'https://api.nytimes.com/svc/mostpopular/v2/viewed/1.json?api-key=mN6Xg33Uh049lVc0uwErmOgdhb4TYBt4'\n})\n\n\nclass Articles extends React.Component {\n\nstate = {\n\tarticles: [],\n}\n\nconstructor(props){\n\tsuper(props)\n\t\tapi.get().then(res => {\n\t\t//console.log(res.data);\n\t\tthis.setState({ articles: res.data.results})\n\t\t//console.log(res.data.results);\n\t\tthis.getArticle = this.getArticle.bind(this);\n\t})\n}\n\n\ngetArticle(){ \n    // Get article titles\n    const list = document.getElementById('list');\n    if (list)\n{\tconst mediaArr = this.state.articles.slice(1,4).map(media => { \n    const a =  \"<p>\" + media.title + \"</p>\";\n\n    list.insertAdjacentHTML('afterBegin', a);\n\t});}\n    else{\n    \tconsole.log(\"Error!!!\");\n    }\n}\ncomponentDidMount(){\nthis.getArticle();\n}\n\n\n\n\n\n\n    //const cleared = mediaArr.filter(function(x) { return x !== undefined && x!== null;});\n\n\n// Get article urls\n //    const getMetadataArr = cleared.map(function (metadataArr) { return metadataArr['media-metadata'][0]['url']; });\n\t// if (getMetadataArr.constructor == Array) {console.log(\"Array!\")} else {console.log(\"Error\")};\n\t// return getMetadataArr[7];\n\n render() {\n\n    return (\n<div className=\"Articles\">\n<h1>Breaking news</h1>\n<div id='list'>TEST{this.getArticle}</div>\n<div></div>\n</div>\n    );\n}\n\n}\n\nexport default Articles;\n\n\n//{this.state.articles.map(function (article) {const a = article.title; return <h2>{a}</h2>})}\n//if (article.length != null) {return article.media;}\n// {this.state.tests.map(article => <h2>{article.title}</h2>)}\n// {this.state.articles.map((article) => <h2>{article.title}</h2>)}"]},"metadata":{},"sourceType":"module"}