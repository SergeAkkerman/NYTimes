{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.resetAll = resetAll;\nexports.setDefaultOutDelay = setDefaultOutDelay;\nexports.setModalSetIdsHandler = setModalSetIdsHandler;\nexports.clearModalSetIdsHandler = clearModalSetIdsHandler;\nexports.setModalSetHandler = setModalSetHandler;\nexports.clearModalSetHandler = clearModalSetHandler;\nexports.mountModal = mountModal;\nexports.updateModal = updateModal;\nexports.unmountModal = unmountModal;\nvar nextIdValue = 1;\nvar hasContainer = false;\nvar defaultOutDelay = 0;\nvar modalSets = {};\nvar setHandlers = {};\n\nvar setIdsHandler = function setIdsHandler() {};\n\nfunction resetAll() {\n  modalSets = {};\n  setHandlers = {};\n  defaultOutDelay = 0;\n}\n\nfunction setDefaultOutDelay(outDelay) {\n  defaultOutDelay = outDelay;\n}\n\nfunction setModalSetIdsHandler(handler) {\n  hasContainer = true;\n  setIdsHandler = handler;\n  handler(getSetIds());\n}\n\nfunction clearModalSetIdsHandler() {\n  setIdsHandler = function setIdsHandler() {};\n}\n\nfunction setModalSetHandler(id, handler) {\n  hasContainer = true;\n  setHandlers[id] = handler;\n  handler(modalSets[id] || []);\n}\n\nfunction clearModalSetHandler(id) {\n  delete setHandlers[id];\n}\n\nfunction mountModal(info) {\n  if (firstMount() && !hasContainer) {\n    setTimeout(warnIfNoContainer, 1000);\n  }\n\n  var id = nextId();\n  info = Object.assign({\n    setId: 0\n  }, info);\n  if (typeof info.outDelay === 'undefined') info.outDelay = defaultOutDelay;\n  var setId = info.setId;\n  var notifySetIds = false;\n\n  if (!modalSets[setId]) {\n    modalSets[setId] = [];\n    notifySetIds = true;\n  }\n\n  modalSets[setId].push({\n    id: id,\n    info: info,\n    setId: setId\n  });\n  modalSets[setId].sort(compareModals);\n\n  if (notifySetIds) {\n    setIdsHandler(getSetIds());\n  }\n\n  if (setHandlers[setId]) {\n    setHandlers[setId](modalSets[setId]);\n  }\n\n  return id;\n}\n\nfunction updateModal(id, info) {\n  var setIds = getSetIds();\n  var foundSetId = void 0;\n  setIds.forEach(function (setId) {\n    modalSets[setId] = modalSets[setId].map(function (modal) {\n      if (modal.id === id) {\n        foundSetId = setId;\n        return {\n          id: id,\n          info: info\n        };\n      }\n\n      return modal;\n    });\n  });\n\n  if (typeof foundSetId === 'undefined') {\n    console.log('react-router-modal: updateModal with bad id', id); //eslint-disable-line\n  } else {\n    var handler = setHandlers[foundSetId];\n    if (handler) handler(modalSets[foundSetId]);\n  }\n}\n\nfunction getSetIds() {\n  return Object.keys(modalSets).map(function (id) {\n    return parseInt(id, 10);\n  });\n}\n\nfunction compareModals(a, b) {\n  var stackOrderDiff = (a.info.stackOrder || 0) - (b.info.stackOrder || 0);\n  if (stackOrderDiff !== 0) return stackOrderDiff;\n  return a.id - b.id;\n}\n\nfunction findModalById(id) {\n  var setIds = getSetIds();\n\n  for (var i = 0; i < setIds.length; i++) {\n    var modals = modalSets[setIds[i]];\n\n    for (var j = 0; j < modals.length; j++) {\n      if (modals[j].id === id) return modals[j].info;\n    }\n  }\n}\n\nfunction unmountModal(id) {\n  var modal = findModalById(id);\n  if (!modal) return;\n\n  if (modal.outDelay) {\n    var updated = _extends({}, modal, {\n      out: true\n    });\n\n    updateModal(id, updated);\n    return setTimeout(removeModal.bind(null, id), modal.outDelay);\n  } else {\n    removeModal(id);\n  }\n}\n\nfunction removeModal(id) {\n  var setIds = getSetIds();\n  var foundSetId = void 0;\n  setIds.forEach(function (setId) {\n    modalSets[setId] = modalSets[setId].filter(function (modal) {\n      if (modal.id === id) {\n        foundSetId = setId;\n        return false;\n      }\n\n      return true;\n    });\n  });\n\n  if (typeof foundSetId !== 'undefined') {\n    if (modalSets[foundSetId].length === 0) {\n      delete modalSets[foundSetId];\n    }\n\n    setIdsHandler(getSetIds());\n    var handler = setHandlers[foundSetId];\n    if (handler) handler(modalSets[foundSetId] || []);\n  }\n}\n\nfunction firstMount() {\n  return nextIdValue === 0;\n}\n\nfunction nextId() {\n  return nextIdValue++;\n}\n\nfunction warnIfNoContainer() {\n  if (!hasContainer) {\n    console.log('react-router-modal warning: Modal was mounted but no <ModalContainer /> found'); //eslint-disable-line\n  }\n}","map":{"version":3,"sources":["/Users/sergey/Desktop/LinkUp_React_Final/my-app/node_modules/react-router-modal/lib/modal_controller.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","resetAll","setDefaultOutDelay","setModalSetIdsHandler","clearModalSetIdsHandler","setModalSetHandler","clearModalSetHandler","mountModal","updateModal","unmountModal","nextIdValue","hasContainer","defaultOutDelay","modalSets","setHandlers","setIdsHandler","outDelay","handler","getSetIds","id","info","firstMount","setTimeout","warnIfNoContainer","nextId","setId","notifySetIds","push","sort","compareModals","setIds","foundSetId","forEach","map","modal","console","log","keys","parseInt","a","b","stackOrderDiff","stackOrder","findModalById","modals","j","updated","out","removeModal","bind","filter"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.resetAll = resetAll;\nexports.setDefaultOutDelay = setDefaultOutDelay;\nexports.setModalSetIdsHandler = setModalSetIdsHandler;\nexports.clearModalSetIdsHandler = clearModalSetIdsHandler;\nexports.setModalSetHandler = setModalSetHandler;\nexports.clearModalSetHandler = clearModalSetHandler;\nexports.mountModal = mountModal;\nexports.updateModal = updateModal;\nexports.unmountModal = unmountModal;\n\n\nvar nextIdValue = 1;\n\nvar hasContainer = false;\nvar defaultOutDelay = 0;\n\nvar modalSets = {};\n\nvar setHandlers = {};\nvar setIdsHandler = function setIdsHandler() {};\n\nfunction resetAll() {\n  modalSets = {};\n  setHandlers = {};\n  defaultOutDelay = 0;\n}\n\nfunction setDefaultOutDelay(outDelay) {\n  defaultOutDelay = outDelay;\n}\n\nfunction setModalSetIdsHandler(handler) {\n  hasContainer = true;\n  setIdsHandler = handler;\n  handler(getSetIds());\n}\n\nfunction clearModalSetIdsHandler() {\n  setIdsHandler = function setIdsHandler() {};\n}\n\nfunction setModalSetHandler(id, handler) {\n  hasContainer = true;\n  setHandlers[id] = handler;\n  handler(modalSets[id] || []);\n}\n\nfunction clearModalSetHandler(id) {\n  delete setHandlers[id];\n}\n\nfunction mountModal(info) {\n  if (firstMount() && !hasContainer) {\n    setTimeout(warnIfNoContainer, 1000);\n  }\n\n  var id = nextId();\n\n  info = Object.assign({ setId: 0 }, info);\n  if (typeof info.outDelay === 'undefined') info.outDelay = defaultOutDelay;\n  var setId = info.setId;\n\n  var notifySetIds = false;\n  if (!modalSets[setId]) {\n    modalSets[setId] = [];\n    notifySetIds = true;\n  }\n\n  modalSets[setId].push({ id: id, info: info, setId: setId });\n  modalSets[setId].sort(compareModals);\n\n  if (notifySetIds) {\n    setIdsHandler(getSetIds());\n  }\n\n  if (setHandlers[setId]) {\n    setHandlers[setId](modalSets[setId]);\n  }\n\n  return id;\n}\n\nfunction updateModal(id, info) {\n  var setIds = getSetIds();\n  var foundSetId = void 0;\n  setIds.forEach(function (setId) {\n    modalSets[setId] = modalSets[setId].map(function (modal) {\n      if (modal.id === id) {\n        foundSetId = setId;\n        return { id: id, info: info };\n      }\n      return modal;\n    });\n  });\n\n  if (typeof foundSetId === 'undefined') {\n    console.log('react-router-modal: updateModal with bad id', id); //eslint-disable-line\n  } else {\n    var handler = setHandlers[foundSetId];\n    if (handler) handler(modalSets[foundSetId]);\n  }\n}\n\nfunction getSetIds() {\n  return Object.keys(modalSets).map(function (id) {\n    return parseInt(id, 10);\n  });\n}\n\nfunction compareModals(a, b) {\n  var stackOrderDiff = (a.info.stackOrder || 0) - (b.info.stackOrder || 0);\n  if (stackOrderDiff !== 0) return stackOrderDiff;\n  return a.id - b.id;\n}\n\nfunction findModalById(id) {\n  var setIds = getSetIds();\n  for (var i = 0; i < setIds.length; i++) {\n    var modals = modalSets[setIds[i]];\n    for (var j = 0; j < modals.length; j++) {\n      if (modals[j].id === id) return modals[j].info;\n    }\n  }\n}\n\nfunction unmountModal(id) {\n  var modal = findModalById(id);\n  if (!modal) return;\n\n  if (modal.outDelay) {\n    var updated = _extends({}, modal, { out: true });\n\n    updateModal(id, updated);\n    return setTimeout(removeModal.bind(null, id), modal.outDelay);\n  } else {\n    removeModal(id);\n  }\n}\n\nfunction removeModal(id) {\n  var setIds = getSetIds();\n  var foundSetId = void 0;\n  setIds.forEach(function (setId) {\n    modalSets[setId] = modalSets[setId].filter(function (modal) {\n      if (modal.id === id) {\n        foundSetId = setId;\n        return false;\n      }\n      return true;\n    });\n  });\n\n  if (typeof foundSetId !== 'undefined') {\n    if (modalSets[foundSetId].length === 0) {\n      delete modalSets[foundSetId];\n    }\n    setIdsHandler(getSetIds());\n    var handler = setHandlers[foundSetId];\n    if (handler) handler(modalSets[foundSetId] || []);\n  }\n}\n\nfunction firstMount() {\n  return nextIdValue === 0;\n}\n\nfunction nextId() {\n  return nextIdValue++;\n}\n\nfunction warnIfNoContainer() {\n  if (!hasContainer) {\n    console.log('react-router-modal warning: Modal was mounted but no <ModalContainer /> found'); //eslint-disable-line\n  }\n}"]},"metadata":{},"sourceType":"script"}