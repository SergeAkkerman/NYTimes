{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergey/Desktop/LinkUp_React_Final/my-app/src/Dropdown.js\";\nimport React, { useState, Component } from 'react';\nimport fire from './config/Fire';\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\n\nclass Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.pathToAvatar = this.pathToAvatar.bind(this);\n    this.state = {\n      avatar_link: this.databaseAvatarLink\n    };\n  } //ДОБАВИТЬ УСЛОВИЕ: ЕСЛИ В БАЗЕ ЕССТЬ ССЫЛКА, ВСТАВЛЯТЬ ЕЕ, ЕСЛИ НЕТ ТО ВСТАВЛЯТЬ СТАНДАРТНУЮ\n\n\n  pathToAvatar() {\n    const userId = fire.auth().currentUser.uid;\n    fire.database().ref('/users/' + userId).once('value').then(snapshot => {\n      const databaseAvatarLink = snapshot.val() && snapshot.val().avatar_link || \"Error!\";\n      this.setState({\n        avatar_link: databaseAvatarLink.toString()\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.pathToAvatar();\n  }\n\n  render() {\n    var _s = $RefreshSig$();\n\n    function logout() {\n      fire.auth().signOut();\n    }\n\n    function Navbar(props) {\n      return /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-nav\",\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this);\n    }\n\n    function App(props) {\n      return /*#__PURE__*/_jsxDEV(Navbar, {\n        children: /*#__PURE__*/_jsxDEV(NavItem, {\n          icon: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"Avatar\",\n            src: props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 22\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: logout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this);\n    }\n\n    function NavItem(props) {\n      _s();\n\n      const [open, setOpen] = useState(false);\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"nav-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"icon-button\",\n          onClick: () => setOpen(!open),\n          children: props.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this), open && props.children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this);\n    }\n\n    _s(NavItem, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AvatarDiv\",\n      children: App(this.state.avatar_link)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Dropdown;","map":{"version":3,"sources":["/Users/sergey/Desktop/LinkUp_React_Final/my-app/src/Dropdown.js"],"names":["React","useState","Component","fire","BrowserRouter","Route","NavLink","Dropdown","constructor","props","pathToAvatar","bind","state","avatar_link","databaseAvatarLink","userId","auth","currentUser","uid","database","ref","once","then","snapshot","val","setState","toString","componentDidMount","render","logout","signOut","Navbar","children","App","NavItem","open","setOpen","icon"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\nimport fire from './config/Fire';\nimport {BrowserRouter, Route, NavLink} from 'react-router-dom';\n\nclass Dropdown extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.pathToAvatar = this.pathToAvatar.bind(this);\n    this.state = {\n      avatar_link: this.databaseAvatarLink,\n    };\n    \n  }\n\n\n\n//ДОБАВИТЬ УСЛОВИЕ: ЕСЛИ В БАЗЕ ЕССТЬ ССЫЛКА, ВСТАВЛЯТЬ ЕЕ, ЕСЛИ НЕТ ТО ВСТАВЛЯТЬ СТАНДАРТНУЮ\npathToAvatar(){\n  const userId = fire.auth().currentUser.uid;\n  fire.database().ref('/users/' + userId).once('value').then((snapshot) => {\n    const databaseAvatarLink = (snapshot.val() && snapshot.val().avatar_link) || \"Error!\";\n    this.setState({avatar_link: databaseAvatarLink.toString()});\n  });\n}\n\ncomponentDidMount(){\n  this.pathToAvatar();\n}\n\nrender() {\n\n  function   logout() {\n    fire.auth().signOut();\n  }\n\n  function Navbar(props){\n    return(\n      <nav className=\"navbar\">\n      <ul className=\"navbar-nav\">{ props.children }</ul>\n      </nav>\n      )\n  }\n\n  function App(props){ \n    return (\n      <Navbar>\n      <NavItem icon= <img className='Avatar' src= {props} />>\n      <button onClick = {logout}>Logout</button>\n      <NavLink to='/login'><button>Profile</button></NavLink>\n      </NavItem>\n      </Navbar>\n      );\n  }\n\n  function NavItem(props){\n    const [open, setOpen] = useState(false);\n    return(\n      <p className=\"nav-item\">\n      <a href=\"#\" className=\"icon-button\" onClick = {()=> setOpen(!open)}>\n      {props.icon}\n      </a>\n      {open && props.children}\n      </p>\n      )\n  }\n\n  return (\n    <div className='AvatarDiv'>\n    {App(this.state.avatar_link)}   \n    </div>\n    )\n  }\n}\n\n\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}