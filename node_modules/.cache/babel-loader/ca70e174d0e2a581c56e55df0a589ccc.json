{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergey/Desktop/LinkUp_React_Final/my-app/src/Profile.js\";\nimport React from 'react';\nimport fire from './config/Fire';\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setAvatarLink = this.setAvatarLink.bind(this);\n    this.pathToAvatar = this.pathToAvatar.bind(this);\n    this.state = {\n      avatar_link: this.pathToAvatar()\n    };\n  }\n\n  componnentDidMount() {// this.pathToAvatar();\n  }\n\n  logout() {\n    fire.auth().signOut();\n  } //ДОБАВИТЬ УСЛОВИЕ: ЕСЛИ В БАЗЕ ЕССТЬ ССЫЛКА, ВСТАВЛЯТЬ ЕЕ, ЕСЛИ НЕТ ТО ВСТАВЛЯТЬ СТАНДАРТНУЮ\n\n\n  pathToAvatar() {\n    const userId = fire.auth().currentUser.uid;\n    const AvaLink = fire.database().ref('/users/' + userId).once('value').then(snapshot => {\n      const databaseAvatarLink = snapshot.val() && snapshot.val().avatar_link || \"Error!\";\n      return databaseAvatarLink;\n    });\n\n    const GetAvaLink = async () => {\n      const a = await AvaLink;\n      return a.toString();\n    };\n\n    GetAvaLink.toString();\n  }\n\n  setAvatarLink() {\n    //fire.auth().onAuthStateChanged((user) => {\n    const uid = fire.auth().currentUser.uid;\n    const email = fire.auth().currentUser.email;\n    console.log(email);\n    const userAvatarLink = prompt('Link to your avatar');\n    userAvatarLink ? fire.database().ref('users/' + uid).update({\n      avatar_link: userAvatarLink\n    }) : console.log(\"NULL!!\");\n    this.pathToAvatar();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"You Are Logged In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.pathToAvatar()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.pathToAvatar()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.setAvatarLink,\n        children: \"Set Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.pathToAvatar,\n        children: \" Show Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/sergey/Desktop/LinkUp_React_Final/my-app/src/Profile.js"],"names":["React","fire","Profile","Component","constructor","props","setAvatarLink","bind","pathToAvatar","state","avatar_link","componnentDidMount","logout","auth","signOut","userId","currentUser","uid","AvaLink","database","ref","once","then","snapshot","databaseAvatarLink","val","GetAvaLink","a","toString","email","console","log","userAvatarLink","prompt","update","render","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AAEpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,KAAL,GAAa;AACbC,MAAAA,WAAW,EAAE,KAAKF,YAAL;AADA,KAAb;AAIH;;AAEDG,EAAAA,kBAAkB,GAAG,CACrB;AACC;;AAECC,EAAAA,MAAM,GAAG;AACPX,IAAAA,IAAI,CAACY,IAAL,GAAYC,OAAZ;AACD,GAlBmC,CAoBtC;;;AACAN,EAAAA,YAAY,GAAE;AACd,UAAMO,MAAM,GAAGd,IAAI,CAACY,IAAL,GAAYG,WAAZ,CAAwBC,GAAvC;AACA,UAAMC,OAAO,GAAGjB,IAAI,CAACkB,QAAL,GAAgBC,GAAhB,CAAoB,YAAYL,MAAhC,EAAwCM,IAAxC,CAA6C,OAA7C,EAAsDC,IAAtD,CAA4DC,QAAD,IAAc;AACzF,YAAMC,kBAAkB,GAAID,QAAQ,CAACE,GAAT,MAAkBF,QAAQ,CAACE,GAAT,GAAef,WAAlC,IAAkD,QAA7E;AACA,aAAOc,kBAAP;AACC,KAHe,CAAhB;;AAIA,UAAME,UAAU,GAAG,YAAY;AAC3B,YAAMC,CAAC,GAAG,MAAMT,OAAhB;AACA,aAAQS,CAAC,CAACC,QAAF,EAAR;AACH,KAHD;;AAKAF,IAAAA,UAAU,CAACE,QAAX;AACC;;AAEDtB,EAAAA,aAAa,GAAG;AACf;AACO,UAAMW,GAAG,GAAGhB,IAAI,CAACY,IAAL,GAAYG,WAAZ,CAAwBC,GAApC;AACA,UAAMY,KAAK,GAAG5B,IAAI,CAACY,IAAL,GAAYG,WAAZ,CAAwBa,KAAtC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAMG,cAAc,GAAGC,MAAM,CAAC,qBAAD,CAA7B;AACAD,IAAAA,cAAc,GAAK/B,IAAI,CAACkB,QAAL,GAAgBC,GAAhB,CAAoB,WAAWH,GAA/B,EAAoCiB,MAApC,CAA2C;AAACxB,MAAAA,WAAW,EAAEsB;AAAd,KAA3C,CAAL,GAAmFF,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAjG;AACA,SAAKvB,YAAL;AACC;;AAIR2B,EAAAA,MAAM,GAAG;AAEN,wBACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA,8BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAM,KAAK5B,YAAL;AAAN;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAK,QAAA,GAAG,EAAG,KAAKA,YAAL;AAAX;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,OAAO,EAAI,KAAKI,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAQ,QAAA,OAAO,EAAI,KAAKN,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAQ,QAAA,OAAO,EAAI,KAAKE,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA5DmC;;AAgEtC,eAAeN,OAAf","sourcesContent":["import React from 'react';\nimport fire from './config/Fire';\n\nclass Profile extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.setAvatarLink = this.setAvatarLink.bind(this);\n    this.pathToAvatar = this.pathToAvatar.bind(this);\n    this.state = {\n    avatar_link: this.pathToAvatar()\n    };\n    \n}\n\ncomponnentDidMount() {\n// this.pathToAvatar();\n}\n\n  logout() {\n    fire.auth().signOut();\n  }\n\n//ДОБАВИТЬ УСЛОВИЕ: ЕСЛИ В БАЗЕ ЕССТЬ ССЫЛКА, ВСТАВЛЯТЬ ЕЕ, ЕСЛИ НЕТ ТО ВСТАВЛЯТЬ СТАНДАРТНУЮ\npathToAvatar(){\nconst userId = fire.auth().currentUser.uid;\nconst AvaLink = fire.database().ref('/users/' + userId).once('value').then((snapshot) => {\nconst databaseAvatarLink = (snapshot.val() && snapshot.val().avatar_link) || \"Error!\";\nreturn databaseAvatarLink;\n});\nconst GetAvaLink = async () => {\n    const a = await AvaLink;\n    return (a.toString());\n}\n\nGetAvaLink.toString();\n}\n\nsetAvatarLink() {\n\t//fire.auth().onAuthStateChanged((user) => {\n        const uid = fire.auth().currentUser.uid;\n        const email = fire.auth().currentUser.email;\n        console.log(email);\n        const userAvatarLink = prompt('Link to your avatar');\n        userAvatarLink ?  (fire.database().ref('users/' + uid).update({avatar_link: userAvatarLink})) : (console.log(\"NULL!!\"))\n        this.pathToAvatar();      \n        };\n\n\n\n render() {\n\n    return (\n      <div style={{textAlign: 'center'}}>\n\n        <h3>You Are Logged In</h3>\n        <div>{this.pathToAvatar()}</div>\n        <img src= {this.pathToAvatar()} />\n        <button onClick = {this.logout}>Logout</button>\n        <button onClick = {this.setAvatarLink}>Set Avatar</button>\n        <button onClick = {this.pathToAvatar}> Show Avatar</button>\n      </div>\n    )\n  }\n}\n\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}