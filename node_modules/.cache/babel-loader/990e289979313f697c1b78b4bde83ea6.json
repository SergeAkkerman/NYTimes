{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergey/Desktop/LinkUp_React_Final/my-app/src/Articles.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\nconst api = axios.create({\n  baseURL: 'https://api.nytimes.com/svc/mostpopular/v2/viewed/1.json?api-key=mN6Xg33Uh049lVc0uwErmOgdhb4TYBt4'\n});\n\nclass Articles extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: []\n    };\n    api.get().then(res => {\n      //console.log(res.data);\n      this.setState({\n        articles: res.data.results\n      }); //console.log(res.data.results);\n      //this.getArticle = this.getArticle.bind(this);\n    });\n  }\n\n  getArticle() {\n    var _s = $RefreshSig$();\n\n    // Get article titles\n    function TestState() {\n      _s();\n\n      const [testVar, onclick] = useState(0);\n\n      const click = () => onclick(1);\n    }\n\n    _s(TestState, \"WLAV3Y3Hxz70Gutnp68qvcDHkVQ=\");\n\n    const divStyle = {\n      textDecoration: 'none',\n      borderBottom: '1px solid black',\n      padding: '15px',\n      margin: '15px',\n      fontFamily: 'Domine'\n    };\n    const mediaArr = this.state.articles.map(media => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: divStyle,\n      id: \"ArticleDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        style: {\n          color: 'black'\n        },\n        onClick: this.TestState,\n        children: media.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 4\n      }, this)\n    }, media.title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this));\n    return mediaArr;\n  } // {\tconst mediaArr = this.state.articles.slice(0,1).map(media => { \n  //     const a =  \"<p>\" + media.title + \"</p>\";\n  //     list.insertAdjacentHTML('afterBegin', a);\n  // \t});}\n  //     else{\n  //     \tconsole.log(\"Error!!!\");\n  //     }\n  //const cleared = mediaArr.filter(function(x) { return x !== undefined && x!== null;});\n  // Get article urls\n  //    const getMetadataArr = cleared.map(function (metadataArr) { return metadataArr['media-metadata'][0]['url']; });\n  // if (getMetadataArr.constructor == Array) {console.log(\"Array!\")} else {console.log(\"Error\")};\n  // return getMetadataArr[7];\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ContentRaw\",\n          children: this.getArticle().slice(0, 4)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ContentRaw\",\n          children: this.getArticle().slice(4, 8)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ContentRaw\",\n          children: this.getArticle().slice(8, 12)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\nexport default Articles; //{this.state.articles.map(function (article) {const a = article.title; return <h2>{a}</h2>})}\n//if (article.length != null) {return article.media;}\n// {this.state.tests.map(article => <h2>{article.title}</h2>)}\n// {this.state.articles.map((article) => <h2>{article.title}</h2>)}","map":{"version":3,"sources":["/Users/sergey/Desktop/LinkUp_React_Final/my-app/src/Articles.js"],"names":["React","useState","axios","BrowserRouter","Route","NavLink","api","create","baseURL","Articles","Component","constructor","props","state","articles","get","then","res","setState","data","results","getArticle","TestState","testVar","onclick","click","divStyle","textDecoration","borderBottom","padding","margin","fontFamily","mediaArr","map","media","color","title","render","slice"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA4C,kBAA5C;AAIA,MAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAE;AADe,CAAb,CAAZ;;AAMA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AAOvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AADiB,SALlBC,KAKkB,GALV;AACPC,MAAAA,QAAQ,EAAE;AADH,KAKU;AAEhBR,IAAAA,GAAG,CAACS,GAAJ,GAAUC,IAAV,CAAeC,GAAG,IAAI;AACtB;AAEA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAEG,GAAG,CAACE,IAAJ,CAASC;AAArB,OAAd,EAHsB,CAItB;AACA;AACA,KANA;AAOD;;AAGDC,EAAAA,UAAU,GAAE;AAAA;;AACR;AACJ,aAASC,SAAT,GAAoB;AAAA;;AACpB,YAAM,CAACC,OAAD,EAAUC,OAAV,IAAqBvB,QAAQ,CAAC,CAAD,CAAnC;;AACA,YAAMwB,KAAK,GAAG,MAAMD,OAAO,CAAC,CAAD,CAA3B;AACC;;AALW,OAEHF,SAFG;;AAOZ,UAAMI,QAAQ,GAAG;AACjBC,MAAAA,cAAc,EAAE,MADC;AAEjBC,MAAAA,YAAY,EAAE,iBAFG;AAGjBC,MAAAA,OAAO,EAAE,MAHQ;AAIjBC,MAAAA,MAAM,EAAE,MAJS;AAKjBC,MAAAA,UAAU,EAAE;AALK,KAAjB;AASE,UAAMC,QAAQ,GAAG,KAAKnB,KAAL,CAAWC,QAAX,CAAoBmB,GAApB,CAAwBC,KAAK,iBAC7C;AAAK,MAAA,KAAK,EAAER,QAAZ;AAAwC,MAAA,EAAE,EAAC,YAA3C;AAAA,6BACA;AAAI,QAAA,KAAK,EAAE;AAAES,UAAAA,KAAK,EAAE;AAAT,SAAX;AAA+B,QAAA,OAAO,EAAE,KAAKb,SAA7C;AAAA,kBACCY,KAAK,CAACE;AADP;AAAA;AAAA;AAAA;AAAA;AADA,OAA2BF,KAAK,CAACE,KAAjC;AAAA;AAAA;AAAA;AAAA,YADgB,CAAjB;AAIO,WAAOJ,QAAP;AACR,GAxCsC,CA6CvC;AACA;AAEA;AACA;AACA;AACA;AACA;AAGI;AAGJ;AACC;AACA;AACA;;;AAEAK,EAAAA,MAAM,GAAG;AAEN,wBACJ,QAAC,aAAD;AAAA,6BAEA;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBAA6B,KAAKhB,UAAL,GAAkBiB,KAAlB,CAAwB,CAAxB,EAA2B,CAA3B;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBAA6B,KAAKjB,UAAL,GAAkBiB,KAAlB,CAAwB,CAAxB,EAA2B,CAA3B;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBAA6B,KAAKjB,UAAL,GAAkBiB,KAAlB,CAAwB,CAAxB,EAA2B,EAA3B;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YADI;AAUH;;AA3EsC;;AA+EvC,eAAe7B,QAAf,C,CAGA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport {BrowserRouter, Route, NavLink} from 'react-router-dom';\n\n\n\nconst api = axios.create({\n\tbaseURL: 'https://api.nytimes.com/svc/mostpopular/v2/viewed/1.json?api-key=mN6Xg33Uh049lVc0uwErmOgdhb4TYBt4'\n})\n\n\n\nclass Articles extends React.Component {\n\nstate = {\n\tarticles: [],\n}\n\n\nconstructor(props){\n\tsuper(props)\n\t\tapi.get().then(res => {\n\t\t//console.log(res.data);\n\t\t\n\t\tthis.setState({ articles: res.data.results,})\n\t\t//console.log(res.data.results);\n\t\t//this.getArticle = this.getArticle.bind(this);\n\t})\n}\n\n\ngetArticle(){ \n    // Get article titles\nfunction TestState(){\nconst [testVar, onclick] = useState(0);\nconst click = () => onclick(1);\n}\n\nconst divStyle = {\ntextDecoration: 'none',\nborderBottom: '1px solid black',\npadding: '15px',\nmargin: '15px',\nfontFamily: 'Domine'\n};\n\n\n \tconst mediaArr = this.state.articles.map(media => \n \t\t<div style={divStyle} key={media.title} id=\"ArticleDiv\">\n \t\t<a  style={{ color: 'black' }} onClick={this.TestState}>\n \t\t{media.title}</a></div>);\n         return mediaArr;\n}\n\n\n\n\n// {\tconst mediaArr = this.state.articles.slice(0,1).map(media => { \n//     const a =  \"<p>\" + media.title + \"</p>\";\n\n//     list.insertAdjacentHTML('afterBegin', a);\n// \t});}\n//     else{\n//     \tconsole.log(\"Error!!!\");\n//     }\n\n\n    //const cleared = mediaArr.filter(function(x) { return x !== undefined && x!== null;});\n\n\n// Get article urls\n //    const getMetadataArr = cleared.map(function (metadataArr) { return metadataArr['media-metadata'][0]['url']; });\n\t// if (getMetadataArr.constructor == Array) {console.log(\"Array!\")} else {console.log(\"Error\")};\n\t// return getMetadataArr[7];\n\n render() {\n\n    return (\n<BrowserRouter>\n\n<div className=\"Content\">\n<div className=\"ContentRaw\">{this.getArticle().slice(0, 4)}</div>\n<div className=\"ContentRaw\">{this.getArticle().slice(4, 8)}</div>\n<div className=\"ContentRaw\">{this.getArticle().slice(8, 12)}</div>\n</div>\n</BrowserRouter>\n)\n}\n\n}\n\nexport default Articles;\n\n\n//{this.state.articles.map(function (article) {const a = article.title; return <h2>{a}</h2>})}\n//if (article.length != null) {return article.media;}\n// {this.state.tests.map(article => <h2>{article.title}</h2>)}\n// {this.state.articles.map((article) => <h2>{article.title}</h2>)}"]},"metadata":{},"sourceType":"module"}