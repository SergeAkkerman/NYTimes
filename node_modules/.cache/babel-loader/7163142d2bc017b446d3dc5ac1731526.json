{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergey/Desktop/LinkUp_React_Final/my-app/src/LoginForm.js\";\nimport React from 'react';\nimport fire from './config/Fire';\nimport 'firebase/auth';\nimport { createBrowserHistory } from \"history\";\nimport { BrowserRouter, Router, Route, Switch, NavLink } from 'react-router-dom';\nimport Profile from './Profile.js';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nconst uid = fire.auth().currentUser.uid;\nconst email = fire.auth().currentUser.email;\nconst userId = fire.auth().currentUser.uid;\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = () => {\n      fire.auth().setPersistence(firebase.auth.Auth.Persistence.NONE).then(() => {\n        var provider = new firebase.auth.GoogleAuthProvider();\n        fire.auth().signInWithPopup(provider).then(result => {\n          /** @type {firebase.auth.OAuthCredential} */\n          var credential = result.credential; // This gives you a Google Access Token. You can use it to access the Google API.\n\n          var token = credential.accessToken; // The signed-in user info.\n\n          var user = result.user; // ...\n        }).catch(error => {\n          console.log(error);\n        });\n      });\n    };\n\n    this.state = {\n      error: '',\n      user_name: ''\n    };\n    this.loginFunc = this.loginFunc.bind(this);\n    this.authListener = this.authListener.bind(this);\n    this.loginForm = this.loginForm.bind(this);\n    this.loginForm();\n  }\n\n  componentDidMount() {\n    this.authListener();\n    this.loginForm();\n  } // showing user name when logged in\n\n\n  authListener() {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          user\n        });\n        this.name();\n        this.state.user_name ? console.log('Your name is ' + this.state.user_name) : this.setState({\n          user_name: user.name\n        });\n        this.setName();\n      } else {\n        this.setState({\n          user: null\n        });\n      }\n    });\n  } // getting and showing current user name\n\n\n  setName() {\n    const userName = this.state.user_name;\n    userName ? fire.database().ref('users/' + uid).update({\n      user_name: userName\n    }) : console.log(\"NULL!!\");\n    this.name();\n  }\n\n  name() {\n    const name = fire.database().ref('/users/' + userId).once('value').then(snapshot => {\n      const databaseName = snapshot.val() && snapshot.val().user_name || '';\n      this.setState({\n        user_name: databaseName.toString()\n      });\n    });\n  } // Google auth\n\n\n  // login with email and password\n  loginFunc() {\n    fire.auth().setPersistence(firebase.auth.Auth.Persistence.NONE).then(() => {\n      const email = document.querySelector('#email').value;\n      const password = document.querySelector('#password').value;\n      fire.auth().signInWithEmailAndPassword(email, password).then(u => {\n        console.log('Successfully Logged In.');\n      }).catch(err => {\n        this.setState({\n          error: err.toString()\n        });\n      });\n    });\n  }\n\n  loginForm() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AvatarDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0456\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          placeholder: \"\\u0412\\u0430\\u0448 Email..\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px'\n          },\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          placeholder: \"\\u0412\\u0430\\u0448 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C..\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          margin: '10px'\n        },\n        onClick: this.loginFunc,\n        children: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            margin: '10px'\n          },\n          children: \"\\u0417\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u0443\\u0432\\u0430\\u0442\\u0438\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"GoogleImg\",\n          src: \"https://raw.githubusercontent.com/react-native-community/react-native-google-signin/HEAD/img/signin-button.png\",\n          onClick: this.onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 3\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.user ? /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 23\n      }, this) : this.loginForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/sergey/Desktop/LinkUp_React_Final/my-app/src/LoginForm.js"],"names":["React","fire","createBrowserHistory","BrowserRouter","Router","Route","Switch","NavLink","Profile","firebase","uid","auth","currentUser","email","userId","LoginForm","Component","constructor","props","onSubmit","setPersistence","Auth","Persistence","NONE","then","provider","GoogleAuthProvider","signInWithPopup","result","credential","token","accessToken","user","catch","error","console","log","state","user_name","loginFunc","bind","authListener","loginForm","componentDidMount","onAuthStateChanged","setState","name","setName","userName","database","ref","update","once","snapshot","databaseName","val","toString","document","querySelector","value","password","signInWithEmailAndPassword","u","err","marginTop","color","margin","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport fire from './config/Fire';\nimport 'firebase/auth';\nimport { createBrowserHistory } from \"history\";\nimport { BrowserRouter, Router, Route, Switch, NavLink } from 'react-router-dom';\nimport Profile  from './Profile.js'\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\n  const uid = fire.auth().currentUser.uid;\n  const email = fire.auth().currentUser.email;\n  const userId = fire.auth().currentUser.uid;\n  \nclass LoginForm extends React.Component {\n\n\n\nconstructor(props){\n  super(props)\n  this.state = {\n    error: '',\n    user_name: ''\n  }\n  this.loginFunc = this.loginFunc.bind(this);\n  this.authListener = this.authListener.bind(this);\n  this.loginForm = this.loginForm.bind(this);\n\n  this.loginForm();\n}\n\ncomponentDidMount() {\n  this.authListener();\n  this.loginForm();\n}\n\n// showing user name when logged in\nauthListener() {\n  fire.auth().onAuthStateChanged((user) => {\n    if (user) {\n      this.setState({ user });\n      this.name();\n      this.state.user_name ? (console.log('Your name is ' + this.state.user_name)) : \n      (this.setState({user_name: user.name}));\n      this.setName();\n    } else {\n      this.setState({ user: null });\n    }\n  })\n}\n\n// getting and showing current user name\nsetName() {\n\n  const userName = this.state.user_name;\n  userName ?  (fire.database().ref('users/' + uid).update({user_name: userName})) : (console.log(\"NULL!!\"))\n  this.name();      \n  };\n\nname(){\n\n  const name = fire.database().ref('/users/' + userId).once('value').then((snapshot) => {\n  const databaseName = (snapshot.val() && snapshot.val().user_name) || '';\n  this.setState({user_name: databaseName.toString()});\n  });\n  }\n\n\n// Google auth\nonSubmit = () => {\nfire.auth().setPersistence(firebase.auth.Auth.Persistence.NONE)\n.then(() => {\nvar provider = new firebase.auth.GoogleAuthProvider();\nfire.auth()\n.signInWithPopup(provider)\n.then((result) => {\n  /** @type {firebase.auth.OAuthCredential} */\n  var credential = result.credential;\n\n  // This gives you a Google Access Token. You can use it to access the Google API.\n  var token = credential.accessToken;\n  // The signed-in user info.\n  var user = result.user;\n  // ...\n\n}).catch((error) => {\n  console.log(error);\n});\n})\n}\n\n\n// login with email and password\nloginFunc() {\nfire.auth().setPersistence(firebase.auth.Auth.Persistence.NONE)\n.then(() => {\n  const email = document.querySelector('#email').value;\n  const password = document.querySelector('#password').value;\n  fire.auth().signInWithEmailAndPassword(email, password)\n  .then((u) => {\n    console.log('Successfully Logged In.');\n    })\n  .catch((err) => {\n    this.setState({error: err.toString()});\n  })\n  })\n}\n\n\nloginForm() {\nreturn (\n  <div className='AvatarDiv'>\n  <h3>Авторизація</h3>\n  <div>\n  <div>Email</div>\n  <input id=\"email\" placeholder=\"Ваш Email..\" type=\"text\"/>\n  </div>\n  <div>\n  <div style={{marginTop: '10px'}}>Password</div>\n  <input id=\"password\" placeholder=\"Ваш пароль..\" type=\"password\"/>\n  </div>\n  <div style = {{color: 'red'}}>{this.state.error}</div>\n  <button style={{margin: '10px'}} onClick={this.loginFunc}>Увійти</button>\n  <NavLink to='/signup'><button style={{margin: '10px'}}>Зареєструватися</button></NavLink>\n  <div><img className='GoogleImg' \n  src='https://raw.githubusercontent.com/react-native-community/react-native-google-signin/HEAD/img/signin-button.png' \n  onClick={this.onSubmit} /></div>\n  </div>\n  )\n  }\n\n\nrender(){\n return(\n  <div>\n  {this.state.user ? (<Profile />) : (this.loginForm())}\n  </div>\n  )\n }\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}