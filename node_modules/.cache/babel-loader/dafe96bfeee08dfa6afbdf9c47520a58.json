{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergey/Desktop/LinkUp_React_Test/my-app/src/Home.js\";\nimport React from 'react';\nimport fire from './config/Fire';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      avatar_link: \"\"\n    };\n    this.returnAvatarLink = this.returnAvatarLink.bind(this);\n  }\n\n  logout() {\n    fire.auth().signOut();\n  }\n\n  returnAvatarLink() {\n    this.setState({\n      avatar_link: \"AAAAA\"\n    });\n  } // testSetAvatar() {\n  // \t    const setLink = () => {\n  //      \tthis.setState({\n  //      \tavatar_link: \"FFFFF\"\n  //      \t});\n  //      };\n  // }\n  // getAvatarLink() {\n  // fire.auth().onAuthStateChanged((user) => {\n  // const userId = fire.auth().currentUser.uid;\n  // fire.database().ref('/users/' + userId).once('value').then((snapshot) => {\n  // const userAvatarLink = (snapshot.val() && snapshot.val().avatar_link) || \"Error!\";\n  // console.log(snapshot.toJSON());\n  // });\n  //     });\n  //        };\n\n\n  setAvatarLink() {\n    fire.auth().onAuthStateChanged(user => {\n      console.log(user.email);\n      const userAvatarLink = prompt('Link to your avatar');\n      fire.database().ref('users/' + user.uid).update({\n        avatar_link: userAvatarLink\n      });\n      console.log(userAvatarLink); //    const setLink = () => {\n      // \tthis.setState({\n      // \tuserLink: userAvatarLink\n      // \t});\n      // };\n      //   setLink.bind(this)();\n    });\n  }\n\n  componentDidMount() {\n    // \tfunction onLogin() {\n    // \tfire.auth().onAuthStateChanged((user) => {\n    //       if (user) {\n    //         console.log(user.email);        \n    //      } else {\n    //         console.log('error!!!');\n    //       }\n    //     });\n    // }\n    //     onLogin();\n    function getAvatarLink() {\n      fire.auth().onAuthStateChanged(user => {\n        const userId = fire.auth().currentUser.uid;\n        fire.database().ref('/users/' + userId).once('value').then(snapshot => {\n          const userAvatarLink = snapshot.val() && snapshot.val().avatar_link || \"Error!\"; //console.log(userAvatarLink.toJSON());\n          //this.setState({userAvatarLink});\n        });\n      });\n    }\n\n    ;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You Are Logged In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.avatar_link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.setAvatarLink,\n        children: \"Set Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.userAvatarLink,\n        children: \"Get Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.returnAvatarLink,\n        children: \" TestSet Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/sergey/Desktop/LinkUp_React_Test/my-app/src/Home.js"],"names":["React","fire","Home","Component","constructor","props","state","avatar_link","returnAvatarLink","bind","logout","auth","signOut","setState","setAvatarLink","onAuthStateChanged","user","console","log","email","userAvatarLink","prompt","database","ref","uid","update","componentDidMount","getAvatarLink","userId","currentUser","once","then","snapshot","val","render","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACbC,MAAAA,WAAW,EAAE;AADA,KAAb;AAGA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAECC,EAAAA,MAAM,GAAG;AACPT,IAAAA,IAAI,CAACU,IAAL,GAAYC,OAAZ;AACD;;AAEHJ,EAAAA,gBAAgB,GAAE;AACjB,SAAKK,QAAL,CAAc;AACbN,MAAAA,WAAW,EAAE;AADA,KAAd;AAGA,GAlBkC,CAqBnC;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAO,EAAAA,aAAa,GAAG;AACfb,IAAAA,IAAI,CAACU,IAAL,GAAYI,kBAAZ,CAAgCC,IAAD,IAAU;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB;AACA,YAAMC,cAAc,GAAGC,MAAM,CAAC,qBAAD,CAA7B;AACApB,MAAAA,IAAI,CAACqB,QAAL,GAAgBC,GAAhB,CAAoB,WAAWP,IAAI,CAACQ,GAApC,EAAyCC,MAAzC,CAAgD;AAChDlB,QAAAA,WAAW,EAAEa;AADmC,OAAhD;AAGAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,cAAZ,EANkC,CAOrC;AACA;AACA;AACA;AAEA;AACA;AACI,KAdR;AAeE;;AAKHM,EAAAA,iBAAiB,GAAE;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,aAASC,aAAT,GAAyB;AACzB1B,MAAAA,IAAI,CAACU,IAAL,GAAYI,kBAAZ,CAAgCC,IAAD,IAAU;AAGzC,cAAMY,MAAM,GAAG3B,IAAI,CAACU,IAAL,GAAYkB,WAAZ,CAAwBL,GAAvC;AACAvB,QAAAA,IAAI,CAACqB,QAAL,GAAgBC,GAAhB,CAAoB,YAAYK,MAAhC,EAAwCE,IAAxC,CAA6C,OAA7C,EAAsDC,IAAtD,CAA4DC,QAAD,IAAc;AACzE,gBAAMZ,cAAc,GAAIY,QAAQ,CAACC,GAAT,MAAkBD,QAAQ,CAACC,GAAT,GAAe1B,WAAlC,IAAkD,QAAzE,CADyE,CAEzE;AACA;AACC,SAJD;AAKK,OATL;AAUQ;;AAAA;AAGP;;AAIC2B,EAAAA,MAAM,GAAG;AAIP,wBACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,GAAG,EAAG,KAAK7B,KAAL,CAAWC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAI,KAAKG,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,OAAO,EAAI,KAAKI,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,OAAO,EAAI,KAAKM,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAQ,QAAA,OAAO,EAAI,KAAKZ,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA/GgC;;AAmHnC,eAAeN,IAAf","sourcesContent":["import React from 'react';\nimport fire from './config/Fire';\n\nclass Home extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    avatar_link: \"\",\n    };\n    this.returnAvatarLink = this.returnAvatarLink.bind(this);\n}\n\n  logout() {\n    fire.auth().signOut();\n  }\n\nreturnAvatarLink(){\n\tthis.setState({\n\t\tavatar_link: \"AAAAA\"\n\t})\n}\n\n\n// testSetAvatar() {\n// \t    const setLink = () => {\n//      \tthis.setState({\n//      \tavatar_link: \"FFFFF\"\n//      \t});\n\n//      };\n// }\n\n// getAvatarLink() {\n// fire.auth().onAuthStateChanged((user) => {\n\n\n// const userId = fire.auth().currentUser.uid;\n// fire.database().ref('/users/' + userId).once('value').then((snapshot) => {\n// const userAvatarLink = (snapshot.val() && snapshot.val().avatar_link) || \"Error!\";\n// console.log(snapshot.toJSON());\n// });\n//     });\n//        };\n\n\nsetAvatarLink() {\n\tfire.auth().onAuthStateChanged((user) => {\n        console.log(user.email);\n        const userAvatarLink = prompt('Link to your avatar');\n        fire.database().ref('users/' + user.uid).update({\n        avatar_link: userAvatarLink\n    })\n        console.log(userAvatarLink);\n     //    const setLink = () => {\n     // \tthis.setState({\n     // \tuserLink: userAvatarLink\n     // \t});\n\n     // };\n     //   setLink.bind(this)();\n        });\n  };\n\n\n        \n\ncomponentDidMount(){\n\n// \tfunction onLogin() {\n// \tfire.auth().onAuthStateChanged((user) => {\n//       if (user) {\n//         console.log(user.email);        \n//      } else {\n//         console.log('error!!!');\n//       }\n//     });\n// }\n\n//     onLogin();\n\n\nfunction getAvatarLink() {\nfire.auth().onAuthStateChanged((user) => {\n\n\nconst userId = fire.auth().currentUser.uid;\nfire.database().ref('/users/' + userId).once('value').then((snapshot) => {\nconst userAvatarLink = (snapshot.val() && snapshot.val().avatar_link) || \"Error!\";\n//console.log(userAvatarLink.toJSON());\n//this.setState({userAvatarLink});\n});\n    });\n       };\n\n\n}\n\n\n\n  render() {\n  \t        \n\n\n    return (\n      <div style={{textAlign: 'center'}}>\n        <h1>You Are Logged In</h1>\n        <img src= {this.state.avatar_link} />\n        <button onClick = {this.logout}>Logout</button>\n        <button onClick = {this.setAvatarLink}>Set Avatar</button>\n        <button onClick = {this.userAvatarLink}>Get Avatar</button>\n        <button onClick = {this.returnAvatarLink}> TestSet Avatar</button>\n      </div>\n    )\n  }\n}\n\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}