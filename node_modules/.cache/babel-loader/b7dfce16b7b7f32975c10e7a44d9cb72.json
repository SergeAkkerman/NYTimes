{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergey/Desktop/LinkUp_React_Final/my-app/src/Profile.js\";\nimport React from 'react';\nimport fire from './config/Fire';\n\nconst AvatarLink = function setAvatarLink() {\n  //fire.auth().onAuthStateChanged((user) => {\n  const uid = fire.auth().currentUser.uid;\n  const email = fire.auth().currentUser.email;\n  console.log(email);\n  const userAvatarLink = prompt('Link to your avatar');\n  userAvatarLink ? fire.database().ref('users/' + uid).update({\n    avatar_link: userAvatarLink\n  }) : console.log(\"NULL!!\");\n  this.pathToAvatar();\n};\n\n_c = AvatarLink;\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setAvatarLink = this.setAvatarLink.bind(this);\n    this.pathToAvatar = this.pathToAvatar.bind(this);\n    this.state = {\n      avatar_link: this.databaseAvatarLink\n    };\n  }\n\n  componnentDidMount() {\n    this.pathToAvatar();\n  }\n\n  logout() {\n    fire.auth().signOut();\n  } //ДОБАВИТЬ УСЛОВИЕ: ЕСЛИ В БАЗЕ ЕССТЬ ССЫЛКА, ВСТАВЛЯТЬ ЕЕ, ЕСЛИ НЕТ ТО ВСТАВЛЯТЬ СТАНДАРТНУЮ\n\n\n  pathToAvatar() {\n    const userId = fire.auth().currentUser.uid;\n    fire.database().ref('/users/' + userId).once('value').then(snapshot => {\n      const databaseAvatarLink = snapshot.val() && snapshot.val().avatar_link || \"Error!\";\n      this.setState({\n        avatar_link: databaseAvatarLink.toString()\n      });\n      console.log(databaseAvatarLink.toString());\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"You Are Logged In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.avatar_link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.setAvatarLink,\n        children: \"Set Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.pathToAvatar,\n        children: \" Test Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvatarLink\");","map":{"version":3,"sources":["/Users/sergey/Desktop/LinkUp_React_Final/my-app/src/Profile.js"],"names":["React","fire","AvatarLink","setAvatarLink","uid","auth","currentUser","email","console","log","userAvatarLink","prompt","database","ref","update","avatar_link","pathToAvatar","Profile","Component","constructor","props","bind","state","databaseAvatarLink","componnentDidMount","logout","signOut","userId","once","then","snapshot","val","setState","toString","render","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,MAAMC,UAAU,GAAG,SAASC,aAAT,GAAyB;AACxC;AACI,QAAMC,GAAG,GAAGH,IAAI,CAACI,IAAL,GAAYC,WAAZ,CAAwBF,GAApC;AACA,QAAMG,KAAK,GAAGN,IAAI,CAACI,IAAL,GAAYC,WAAZ,CAAwBC,KAAtC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,cAAc,GAAGC,MAAM,CAAC,qBAAD,CAA7B;AACAD,EAAAA,cAAc,GAAKT,IAAI,CAACW,QAAL,GAAgBC,GAAhB,CAAoB,WAAWT,GAA/B,EAAoCU,MAApC,CAA2C;AAACC,IAAAA,WAAW,EAAEL;AAAd,GAA3C,CAAL,GAAmFF,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAjG;AACA,OAAKO,YAAL;AACC,CART;;KAAMd,U;;AAUN,MAAMe,OAAN,SAAsBjB,KAAK,CAACkB,SAA5B,CAAsC;AAEpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKjB,aAAL,GAAqB,KAAKA,aAAL,CAAmBkB,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKL,YAAL,GAAoB,KAAKA,YAAL,CAAkBK,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AACbP,MAAAA,WAAW,EAAE,KAAKQ;AADL,KAAb;AAIH;;AAEDC,EAAAA,kBAAkB,GAAG;AACrB,SAAKR,YAAL;AACC;;AAECS,EAAAA,MAAM,GAAG;AACPxB,IAAAA,IAAI,CAACI,IAAL,GAAYqB,OAAZ;AACD,GAlBmC,CAoBtC;;;AACAV,EAAAA,YAAY,GAAE;AACd,UAAMW,MAAM,GAAG1B,IAAI,CAACI,IAAL,GAAYC,WAAZ,CAAwBF,GAAvC;AACAH,IAAAA,IAAI,CAACW,QAAL,GAAgBC,GAAhB,CAAoB,YAAYc,MAAhC,EAAwCC,IAAxC,CAA6C,OAA7C,EAAsDC,IAAtD,CAA4DC,QAAD,IAAc;AACzE,YAAMP,kBAAkB,GAAIO,QAAQ,CAACC,GAAT,MAAkBD,QAAQ,CAACC,GAAT,GAAehB,WAAlC,IAAkD,QAA7E;AACA,WAAKiB,QAAL,CAAc;AAACjB,QAAAA,WAAW,EAAEQ,kBAAkB,CAACU,QAAnB;AAAd,OAAd;AACAzB,MAAAA,OAAO,CAACC,GAAR,CAAYc,kBAAkB,CAACU,QAAnB,EAAZ;AACC,KAJD;AAKC;;AAQAC,EAAAA,MAAM,GAAG;AAEN,wBACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,GAAG,EAAG,KAAKb,KAAL,CAAWP;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAI,KAAKU,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,OAAO,EAAI,KAAKtB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,OAAO,EAAI,KAAKa,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA/CmC;;AAmDtC,eAAeC,OAAf","sourcesContent":["import React from 'react';\nimport fire from './config/Fire';\n\nconst AvatarLink = function setAvatarLink() {\n    //fire.auth().onAuthStateChanged((user) => {\n        const uid = fire.auth().currentUser.uid;\n        const email = fire.auth().currentUser.email;\n        console.log(email);\n        const userAvatarLink = prompt('Link to your avatar');\n        userAvatarLink ?  (fire.database().ref('users/' + uid).update({avatar_link: userAvatarLink})) : (console.log(\"NULL!!\"))\n        this.pathToAvatar();      \n        };\n\nclass Profile extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.setAvatarLink = this.setAvatarLink.bind(this);\n    this.pathToAvatar = this.pathToAvatar.bind(this);\n    this.state = {\n    avatar_link: this.databaseAvatarLink\n    };\n    \n}\n\ncomponnentDidMount() {\nthis.pathToAvatar();\n}\n\n  logout() {\n    fire.auth().signOut();\n  }\n\n//ДОБАВИТЬ УСЛОВИЕ: ЕСЛИ В БАЗЕ ЕССТЬ ССЫЛКА, ВСТАВЛЯТЬ ЕЕ, ЕСЛИ НЕТ ТО ВСТАВЛЯТЬ СТАНДАРТНУЮ\npathToAvatar(){\nconst userId = fire.auth().currentUser.uid;\nfire.database().ref('/users/' + userId).once('value').then((snapshot) => {\nconst databaseAvatarLink = (snapshot.val() && snapshot.val().avatar_link) || \"Error!\";\nthis.setState({avatar_link: databaseAvatarLink.toString()});\nconsole.log(databaseAvatarLink.toString());\n});\n}\n\n\n\n\n\n\n\n render() {\n\n    return (\n      <div style={{textAlign: 'center'}}>\n        <h3>You Are Logged In</h3>\n        <img src= {this.state.avatar_link} />\n        <button onClick = {this.logout}>Logout</button>\n        <button onClick = {this.setAvatarLink}>Set Avatar</button>\n        <button onClick = {this.pathToAvatar}> Test Avatar</button>\n      </div>\n    )\n  }\n}\n\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}