{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergey/Desktop/LinkUp_React_Final/my-app/src/LoginForm.js\";\nimport React from 'react';\nimport fire from './config/Fire';\nimport 'firebase/auth';\nimport { createBrowserHistory } from \"history\";\nimport { BrowserRouter, Router, Route, Switch, NavLink } from 'react-router-dom';\nimport Profile from './Profile.js';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\"; //fire.auth().signInWithRedirect(provider);\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: ''\n    };\n    this.loginFunc = this.loginFunc.bind(this);\n    this.authListener = this.authListener.bind(this);\n    this.loginForm = this.loginForm.bind(this);\n    this.GoogleAuthProvider = this.GoogleAuthProvider.bind(this);\n    this.auth = fire.auth();\n    this.auth_ = fire.auth(); //  this.auth.GoogleAuthProvider = this.auth.GoogleAuthProvider.bind(this);\n\n    this.loginForm();\n  }\n\n  googleBuildAndSignIn(id_token) {\n    // [START auth_google_build_signin]\n    // Build Firebase credential with the Google ID token.\n    var credential = fire.auth.GoogleAuthProvider.credential(id_token); // Sign in with credential from the Google user.\n\n    fire.auth().signInWithCredential(credential).catch(error => {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message; // The email of the user's account used.\n\n      var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n      var credential = error.credential; // ...\n    }); // [END auth_google_build_signin]\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          user\n        });\n      } else {\n        this.setState({\n          user: null\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.authListener();\n    this.loginForm();\n  }\n\n  loginFunc() {\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n    fire.auth().signInWithEmailAndPassword(email, password).then(u => {\n      console.log('Successfully Logged In.');\n    }).catch(err => {\n      this.setState({\n        error: err.toString()\n      });\n    });\n  }\n\n  loginForm() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AvatarDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0456\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          placeholder: \"\\u0412\\u0430\\u0448 Email..\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px'\n          },\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          placeholder: \"\\u0412\\u0430\\u0448 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C..\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          margin: '10px'\n        },\n        onClick: this.loginFunc,\n        children: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            margin: '10px'\n          },\n          children: \"\\u0417\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u0443\\u0432\\u0430\\u0442\\u0438\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.googleBuildAndSignIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.user ? /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }, this) : this.loginForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/sergey/Desktop/LinkUp_React_Final/my-app/src/LoginForm.js"],"names":["React","fire","createBrowserHistory","BrowserRouter","Router","Route","Switch","NavLink","Profile","firebase","LoginForm","Component","constructor","props","state","error","loginFunc","bind","authListener","loginForm","GoogleAuthProvider","auth","auth_","googleBuildAndSignIn","id_token","credential","signInWithCredential","catch","errorCode","code","errorMessage","message","email","onAuthStateChanged","user","setState","componentDidMount","document","querySelector","value","password","signInWithEmailAndPassword","then","u","console","log","err","toString","marginTop","color","margin","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport fire from './config/Fire';\nimport 'firebase/auth';\nimport { createBrowserHistory } from \"history\";\nimport { BrowserRouter, Router, Route, Switch, NavLink } from 'react-router-dom';\nimport Profile  from './Profile.js'\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\n\n//fire.auth().signInWithRedirect(provider);\n\nclass LoginForm extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      error: ''\n    }\n    this.loginFunc = this.loginFunc.bind(this);\n    this.authListener = this.authListener.bind(this);\n    this.loginForm = this.loginForm.bind(this);\n    this.GoogleAuthProvider = this.GoogleAuthProvider.bind(this);\n    this.auth = fire.auth();\n    this.auth_ = fire.auth();\n  //  this.auth.GoogleAuthProvider = this.auth.GoogleAuthProvider.bind(this);\n    this.loginForm();\n  }\n\t\ngoogleBuildAndSignIn(id_token) {\n  // [START auth_google_build_signin]\n  // Build Firebase credential with the Google ID token.\n  var credential = fire.auth.GoogleAuthProvider.credential(id_token);\n\n  // Sign in with credential from the Google user.\n  fire.auth().signInWithCredential(credential).catch((error) => {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    // The email of the user's account used.\n    var email = error.email;\n    // The firebase.auth.AuthCredential type that was used.\n    var credential = error.credential;\n    // ...\n  });\n  // [END auth_google_build_signin]\n}\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n      }\n    })\n  }\n\n    componentDidMount() {\n    this.authListener();\n    this.loginForm();\n  }\n\n  loginFunc() {\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n    fire.auth().signInWithEmailAndPassword(email, password)\n    .then((u) => {\n      console.log('Successfully Logged In.');\n    })\n    .catch((err) => {\n      this.setState({error: err.toString()});\n    })\n  }\n\n\n  loginForm() {\nreturn (\n    <div className='AvatarDiv'>\n    <h3>Авторизація</h3>\n    <div>\n    <div>Email</div>\n    <input id=\"email\" placeholder=\"Ваш Email..\" type=\"text\"/>\n    </div>\n    <div>\n    <div style={{marginTop: '10px'}}>Password</div>\n    <input id=\"password\" placeholder=\"Ваш пароль..\" type=\"password\"/>\n    </div>\n    <div style = {{color: 'red'}}>{this.state.error}</div>\n    <button style={{margin: '10px'}} onClick={this.loginFunc}>Увійти</button>\n    <NavLink to='/signup'><button style={{margin: '10px'}}>Зареєструватися</button></NavLink>\n    <button onClick={this.googleBuildAndSignIn}></button>\n    </div>\n  )\n  }\n\n\n  render(){\n\n   return(\n    <div>\n    {this.state.user ? (<Profile />) : (this.loginForm())}\n    </div>\n    )\n }\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}